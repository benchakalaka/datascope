//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.touchip.organizer.activities;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import com.squareup.timessquare.sample.R.id;
import com.squareup.timessquare.sample.R.layout;
import com.touchip.organizer.activities.custom.components.WhiteBoardDrawingView;
import org.androidannotations.api.SdkVersionHelper;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class AGeneralWhiteBoard_
    extends AGeneralWhiteBoard
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private Handler handler_ = new Handler(Looper.getMainLooper());

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
        setContentView(layout.fragment_white_board);
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static AGeneralWhiteBoard_.IntentBuilder_ intent(Context context) {
        return new AGeneralWhiteBoard_.IntentBuilder_(context);
    }

    public static AGeneralWhiteBoard_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new AGeneralWhiteBoard_.IntentBuilder_(fragment);
    }

    public static AGeneralWhiteBoard_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new AGeneralWhiteBoard_.IntentBuilder_(supportFragment);
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        ibSaveDrawing = ((ImageButton) hasViews.findViewById(id.ibSaveDrawing));
        llDrawShapes = ((LinearLayout) hasViews.findViewById(id.llDrawShapes));
        ibCreateNewWhiteboard = ((ImageButton) hasViews.findViewById(id.ibCreateNewWhiteboard));
        ibClearAll = ((ImageButton) hasViews.findViewById(id.ibClearAll));
        ibThick = ((ImageButton) hasViews.findViewById(id.ibThick));
        ibRefreshWhiteboard = ((ImageButton) hasViews.findViewById(id.ibRefreshWhiteboard));
        ibThin = ((ImageButton) hasViews.findViewById(id.ibThin));
        ibDrawText = ((ImageButton) hasViews.findViewById(id.ibDrawText));
        llBrushSize = ((LinearLayout) hasViews.findViewById(id.llBrushSize));
        ivWhiteboardSettingsSelected = ((ImageView) hasViews.findViewById(id.ivWhiteboardSettingsSelected));
        ibShapesLine = ((ImageButton) hasViews.findViewById(id.ibShapesLine));
        ibShapesRectangle = ((ImageButton) hasViews.findViewById(id.ibShapesRectangle));
        ibUndo = ((ImageButton) hasViews.findViewById(id.ibUndo));
        ibShapesTriangle = ((ImageButton) hasViews.findViewById(id.ibShapesTriangle));
        WHITE_BOARD_DRAWING = ((WhiteBoardDrawingView) hasViews.findViewById(id.WHITE_BOARD_DRAWING));
        ibLoadWhiteboard = ((ImageButton) hasViews.findViewById(id.ibLoadWhiteboard));
        ibMedium = ((ImageButton) hasViews.findViewById(id.ibMedium));
        ivShapes = ((ImageView) hasViews.findViewById(id.ivShapes));
        ibRedo = ((ImageButton) hasViews.findViewById(id.ibRedo));
        ibShapesCircle = ((ImageButton) hasViews.findViewById(id.ibShapesCircle));
        ivWhiteboardSettings = ((ImageView) hasViews.findViewById(id.ivWhiteboardSettings));
        ivDrawingState = ((ImageView) hasViews.findViewById(id.ivDrawingState));
        ivShapesSelected = ((ImageView) hasViews.findViewById(id.ivShapesSelected));
        ibEraser = ((ImageButton) hasViews.findViewById(id.ibEraser));
        llChangeTextSize = ((LinearLayout) hasViews.findViewById(id.llChangeTextSize));
        ibShapesFreeDrawing = ((ImageButton) hasViews.findViewById(id.ibShapesFreeDrawing));
        {
            View view = hasViews.findViewById(id.ibShapesRectangle);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibShapesRectangle();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibDrawText);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibDrawText();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibEraser);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibEraser();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ivDrawingState);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ivDrawingState();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibShapesFreeDrawing);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibShapesFreeDrawing();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibShapesTriangle);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibShapesTriangle();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibThin);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibThin();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ivShapes);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ivShapes();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibClearAll);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibClearAll();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibThick);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibThick();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibMedium);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibMedium();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibSaveDrawing);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibSaveDrawing();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibLoadWhiteboard);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibLoadWhiteboard();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibRefreshWhiteboard);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibRefreshWhiteboard();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibCreateNewWhiteboard);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibCreateNewWhiteboard();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibShapesCircle);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibShapesCircle();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibUndo);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibUndo();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibRedo);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibRedo();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ibShapesLine);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ibShapesLine();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ivWhiteboardSettings);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        AGeneralWhiteBoard_.this.ivWhiteboardSettings();
                    }

                }
                );
            }
        }
        afterViews();
    }

    @Override
    public void ibDrawText() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                AGeneralWhiteBoard_.super.ibDrawText();
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, AGeneralWhiteBoard_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            fragment_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, AGeneralWhiteBoard_.class);
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            fragmentSupport_ = fragment;
            context_ = fragment.getActivity();
            intent_ = new Intent(context_, AGeneralWhiteBoard_.class);
        }

        public Intent get() {
            return intent_;
        }

        public AGeneralWhiteBoard_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

        public void startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent_, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent_, requestCode);
                } else {
                    if (context_ instanceof Activity) {
                        ((Activity) context_).startActivityForResult(intent_, requestCode);
                    } else {
                        context_.startActivity(intent_);
                    }
                }
            }
        }

    }

}
