//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.touchip.organizer.activities.custom.components.dialogs;

import android.app.Dialog;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import com.squareup.timessquare.sample.R.id;
import com.squareup.timessquare.sample.R.layout;
import com.touchip.organizer.activities.SuperActivity;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class CDialogTypeOfResources_
    extends CDialogTypeOfResources
    implements HasViews, OnViewChangedListener
{

    private boolean alreadyInflated_ = false;
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    public CDialogTypeOfResources_(SuperActivity act, Dialog hostDialog) {
        super(act, hostDialog);
        init_();
    }

    public static CDialogTypeOfResources build(SuperActivity act, Dialog hostDialog) {
        CDialogTypeOfResources_ instance = new CDialogTypeOfResources_(act, hostDialog);
        instance.onFinishInflate();
        return instance;
    }

    /**
     * The mAlreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!alreadyInflated_) {
            alreadyInflated_ = true;
            inflate(getContext(), layout.dialog_type_of_resources, this);
            onViewChangedNotifier_.notifyViewChanged(this);
        }
        super.onFinishInflate();
    }

    private void init_() {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        ivTradesSelected = ((ImageView) hasViews.findViewById(id.ivTradesSelected));
        ivDeliveries = ((ImageView) hasViews.findViewById(id.ivDeliveries));
        ivAssetsSelected = ((ImageView) hasViews.findViewById(id.ivAssetsSelected));
        ivDeliveriesSelected = ((ImageView) hasViews.findViewById(id.ivDeliveriesSelected));
        ivAssets = ((ImageView) hasViews.findViewById(id.ivAssets));
        ivTrades = ((ImageView) hasViews.findViewById(id.ivTrades));
        {
            View view = hasViews.findViewById(id.ivTrades);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CDialogTypeOfResources_.this.ivTrades();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ivAssets);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CDialogTypeOfResources_.this.ivAssets();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ivDeliveries);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CDialogTypeOfResources_.this.ivDeliveries();
                    }

                }
                );
            }
        }
        afterViews();
    }

}
