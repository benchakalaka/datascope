//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.0.1.
//


package com.touchip.organizer.activities.custom.components;

import android.app.Activity;
import android.content.Context;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.TextView;
import com.squareup.timessquare.sample.R.id;
import com.squareup.timessquare.sample.R.layout;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;


/**
 * We use @SuppressWarning here because our java code
 * generator doesn't know that there is no need
 * to import OnXXXListeners from View as we already
 * are in a View.
 * 
 */
@SuppressWarnings("unused")
public final class CDialogCreateNote_
    extends CDialogCreateNote
    implements HasViews, OnViewChangedListener
{

    private boolean alreadyInflated_ = false;
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    public CDialogCreateNote_(Context context, Activity act) {
        super(context, act);
        init_();
    }

    public static CDialogCreateNote build(Context context, Activity act) {
        CDialogCreateNote_ instance = new CDialogCreateNote_(context, act);
        instance.onFinishInflate();
        return instance;
    }

    /**
     * The mAlreadyInflated_ hack is needed because of an Android bug
     * which leads to infinite calls of onFinishInflate()
     * when inflating a layout with a parent and using
     * the <merge /> tag.
     * 
     */
    @Override
    public void onFinishInflate() {
        if (!alreadyInflated_) {
            alreadyInflated_ = true;
            inflate(getContext(), layout.dialog_create_note, this);
            onViewChangedNotifier_.notifyViewChanged(this);
        }
        super.onFinishInflate();
    }

    private void init_() {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        ibColour3 = ((ImageView) hasViews.findViewById(id.ibColour3));
        ibColour1 = ((ImageView) hasViews.findViewById(id.ibColour1));
        ivTypeOfNote = ((ImageView) hasViews.findViewById(id.ivTypeOfNote));
        ibColour12 = ((ImageView) hasViews.findViewById(id.ibColour12));
        ibColour7 = ((ImageView) hasViews.findViewById(id.ibColour7));
        ibColour5 = ((ImageView) hasViews.findViewById(id.ibColour5));
        ibColour13 = ((ImageView) hasViews.findViewById(id.ibColour13));
        ibColour15 = ((ImageView) hasViews.findViewById(id.ibColour15));
        etName = ((EditText) hasViews.findViewById(id.etName));
        etComments = ((EditText) hasViews.findViewById(id.etComments));
        ibColour9 = ((ImageView) hasViews.findViewById(id.ibColour9));
        ibColour17 = ((ImageView) hasViews.findViewById(id.ibColour17));
        ibColour10 = ((ImageView) hasViews.findViewById(id.ibColour10));
        ivOk = ((ImageView) hasViews.findViewById(id.ivOk));
        ibColour8 = ((ImageView) hasViews.findViewById(id.ibColour8));
        ibColour2 = ((ImageView) hasViews.findViewById(id.ibColour2));
        ibColour14 = ((ImageView) hasViews.findViewById(id.ibColour14));
        twEndDateL = ((TextView) hasViews.findViewById(id.twEndDateL));
        ibColour6 = ((ImageView) hasViews.findViewById(id.ibColour6));
        ibColour4 = ((ImageView) hasViews.findViewById(id.ibColour4));
        ibColour11 = ((ImageView) hasViews.findViewById(id.ibColour11));
        ibColour16 = ((ImageView) hasViews.findViewById(id.ibColour16));
        twStartDate = ((TextView) hasViews.findViewById(id.twStartDate));
        {
            View view = hasViews.findViewById(id.twEndDateL);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CDialogCreateNote_.this.twEndDateL();
                    }

                }
                );
            }
        }
        {
            View view = hasViews.findViewById(id.ivTypeOfNote);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    @Override
                    public void onClick(View view) {
                        CDialogCreateNote_.this.ivTypeOfNote();
                    }

                }
                );
            }
        }
        afterViews();
    }

}
